// <auto-generated />
using System;
using Duha.SIMS.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Duha.SIMS.API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ApplicationUserAddressDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ApplicationUserAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ApplicationUserDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LoginStatus")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.HasIndex("LoginId")
                        .IsUnique();

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ClientUserAddressDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ClientUserId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClientUserId");

                    b.ToTable("ClientUserAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ClientUserDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClientCompanyDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LoginStatus")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PersonalEmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientCompanyDetailId");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.HasIndex("LoginId")
                        .IsUnique();

                    b.ToTable("ClientUsers");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.Client.ClientCompanyAddressDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClientCompanyDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientCompanyDetailId");

                    b.ToTable("ClientCompanyAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.Client.ClientCompanyDetailDM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClientCompanyAddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CompanyDateOfEstablishment")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyLogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOnUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientCompanyAddressId");

                    b.HasIndex("CompanyCode")
                        .IsUnique();

                    b.ToTable("ClientCompany");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyCode = "123",
                            CompanyDateOfEstablishment = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyLogoPath = "wwwroot/content/companies/logos/company.jpg",
                            CompanyMobileNumber = "9876542341",
                            CompanyWebsite = "www.duhasoftwares.com",
                            ContactEmail = "DuhaSoftwares@outlook.com",
                            CreatedBy = "SeedAdmin",
                            CreatedOnUTC = new DateTime(2024, 8, 11, 7, 14, 29, 985, DateTimeKind.Utc).AddTicks(8991),
                            Description = "Software Development Company",
                            Name = "Duha-Softwares"
                        },
                        new
                        {
                            Id = 2,
                            CompanyCode = "124",
                            CompanyDateOfEstablishment = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyLogoPath = "wwwroot/content/companies/logos/company.jpg",
                            CompanyMobileNumber = "1234567890",
                            CompanyWebsite = "www.wmart.com",
                            ContactEmail = "weddingmart@gmail.com",
                            CreatedBy = "SeedAdmin",
                            CreatedOnUTC = new DateTime(2024, 8, 11, 7, 14, 29, 985, DateTimeKind.Utc).AddTicks(8993),
                            Description = "Software Development Company",
                            Name = "Wedding-Mart"
                        });
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ApplicationUserAddressDM", b =>
                {
                    b.HasOne("Duha.SIMS.DomainModels.AppUsers.ApplicationUserDM", "ApplicationUser")
                        .WithMany("ApplicationUserAddress")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ClientUserAddressDM", b =>
                {
                    b.HasOne("Duha.SIMS.DomainModels.AppUsers.ClientUserDM", "ClientUser")
                        .WithMany("ClientUserAddress")
                        .HasForeignKey("ClientUserId");

                    b.Navigation("ClientUser");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ClientUserDM", b =>
                {
                    b.HasOne("Duha.SIMS.DomainModels.Client.ClientCompanyDetailDM", "ClientCompanyDetail")
                        .WithMany("ClientEmployeeUsers")
                        .HasForeignKey("ClientCompanyDetailId");

                    b.Navigation("ClientCompanyDetail");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.Client.ClientCompanyAddressDM", b =>
                {
                    b.HasOne("Duha.SIMS.DomainModels.Client.ClientCompanyDetailDM", "ClientCompanyDetail")
                        .WithMany()
                        .HasForeignKey("ClientCompanyDetailId");

                    b.Navigation("ClientCompanyDetail");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.Client.ClientCompanyDetailDM", b =>
                {
                    b.HasOne("Duha.SIMS.DomainModels.Client.ClientCompanyAddressDM", "ClientCompanyAddress")
                        .WithMany()
                        .HasForeignKey("ClientCompanyAddressId");

                    b.Navigation("ClientCompanyAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ApplicationUserDM", b =>
                {
                    b.Navigation("ApplicationUserAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.AppUsers.ClientUserDM", b =>
                {
                    b.Navigation("ClientUserAddress");
                });

            modelBuilder.Entity("Duha.SIMS.DomainModels.Client.ClientCompanyDetailDM", b =>
                {
                    b.Navigation("ClientEmployeeUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
